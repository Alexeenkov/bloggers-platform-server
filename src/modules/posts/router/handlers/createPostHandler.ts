import {Response} from "express";import type {RequestWithBodyModel} from "../../../../shared/models";import {HTTP_STATUSES} from "../../../../shared/constants/httpStatuses";import type {PostInputDataModel, PostModel} from "../../models/postsModels";import {postsService} from "../../application/postsService";import {blogsQueryRepository} from "../../../blogs/repository/blogsQueryRepository";import {postsQueryRepository} from "../../repository/postsQueryRepository";export const createPostHandler = async (    req: RequestWithBodyModel<PostInputDataModel>,    res: Response<PostModel>,) => {    const blog = await blogsQueryRepository.findBlogName(req.body.blogId);    if (!blog) {        res.sendStatus(HTTP_STATUSES.NOT_FOUND);        return;    }    const insertedId: string = await postsService.create({        ...req.body,        blogName: blog.name,    });    const createdPost = await postsQueryRepository.findById(insertedId);    res.status(HTTP_STATUSES.CREATED).json(<PostModel>createdPost);}
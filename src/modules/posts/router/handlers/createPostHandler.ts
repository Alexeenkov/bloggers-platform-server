import {Response} from "express";import {    ErrorMessagesModel,    RequestWithBodyModel,} from "../../../../shared/models";import {HTTP_STATUSES} from "../../../../shared/constants/httpStatuses";import {postsRepository} from "../../repository/postsRepository";import {blogsRepository} from "../../../blogs/repository/blogsRepository";import {BlogWithIdModel} from "../../../blogs/models/blogsModels";import {PostModel, PostWithIdModel} from "../../models/postsModels";export const createPostHandler = async (req: RequestWithBodyModel<PostModel>, res: Response<PostWithIdModel | ErrorMessagesModel>) => {    const foundBlog: BlogWithIdModel | null = await blogsRepository.findById(req.body.blogId);    if (!foundBlog) {        res.sendStatus(HTTP_STATUSES.NOT_FOUND);        return;    }    const newPost: PostWithIdModel = {        id: new Date().getTime().toString(),        title: req.body.title,        shortDescription: req.body.shortDescription,        content: req.body.content,        blogId: req.body.blogId,        blogName: foundBlog.name,    };    await postsRepository.create(newPost);    res.status(HTTP_STATUSES.CREATED).json(newPost);}
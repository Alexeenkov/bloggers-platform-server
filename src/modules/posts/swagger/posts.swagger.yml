openapi: 3.0.0
info:
  title: API Documentation
  version: 1.0.0

paths:
  /api/posts:
    get:
      summary: Возвращает список всех постов
      tags: [ Posts ]
      responses:
        200:
          description: Список всех постов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
    post:
      summary: Добавляет новый пост
      tags: [ Posts ]
      security:
        - BasicAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostInputData'
      responses:
        201:
          description: Пост был успешно создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        400:
          description: Не прошёл валидацию. В схеме запроса описаны требования к передаваемым данным
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        401:
          description: "Не прошёл авторизацию"

  /api/posts/{id}:
    get:
      summary: Возвращает информацию о посте по ID
      tags: [ Posts ]
      parameters:
        - in: path
          name: id
          required: true
          description: "Уникальный идентификатор поста"
          schema:
            type: string
            example: "1342324324324"
      responses:
        200:
          description: Всё ок, вернул запрашиваемый пост
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        401:
          description: "Не прошёл авторизацию"
        404:
          description: Такого поста нет по указанному ID
    put:
      summary: Обновляет информацию о посте по ID
      tags: [ Posts ]
      security:
        - BasicAuth: [ ]
      parameters:
        - in: path
          name: id
          required: true
          description: "Уникальный идентификатор поста"
          schema:
            type: string
            example: "1342324324324"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostInputData'
      responses:
        204:
          description: Пост успешно обновлён. Ничего не возвращает
        400:
          description: Не прошёл валидацию. В схеме запроса описаны требования к передаваемым данным
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        401:
          description: "Не прошёл авторизацию"
        404:
          description: Такого поста нет по указанному ID
    delete:
      summary: Удаляет пост по ID
      tags: [ Posts ]
      security:
        - BasicAuth: [ ]
      parameters:
        - in: path
          name: id
          required: true
          description: "Уникальный идентификатор поста"
          schema:
            type: string
            example: "1342324324324"
      responses:
        204:
          description: "Пост успешно удалён. Ничего не возвращает"
        401:
          description: "Не прошёл авторизацию"
        404:
          description: "Такого поста нет по указанному ID"
components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
  schemas:
    Post:
      type: object
      required:
        - id
        - title
        - shortDescription
        - content
        - blogId
        - blogName
      properties:
        id:
          type: string
          description: "Уникальный идентификатор"
          example: "1342324324324"
        title:
          type: string
          description: "Заголовок поста"
        shortDescription:
          type: string
          description: "Короткое описание поста"
        content:
          type: string
          description: "Содержимое поста"
        blogId:
          type: string
          description: "Уникальный идентификатор блога, к которому относится данный пост"
        blogName:
          type: string
          description: "Название блога, к которому относится данный пост"
    PostInputData:
      type: object
      required:
        - title
        - shortDescription
        - content
        - blogId
      properties:
        title:
          type: string
          description: "Заголовок поста"
          maxLength: 30
        shortDescription:
          type: string
          description: "Короткое описание поста"
          maxLength: 100
        content:
          type: string
          description: "Содержимое поста"
          maxLength: 1000
        blogId:
          type: string
          description: "Уникальный идентификатор блога, к которому относится данный пост"
    ValidationError:
      type: object
      properties:
        field:
          type: string
          example: "name"
        message:
          type: string
          example: "Invalid name"
    ValidationErrorResponse:
      type: object
      properties:
        errorsMessages:
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'

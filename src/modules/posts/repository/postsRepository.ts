import {    PostInputDataWithBlogNameModel,    PostModel,    PostOutputDataModel,} from "../models/postsModels";import {postsCollection} from "../../../mongodb/db";import {ObjectId, UpdateResult} from "mongodb";import {mappingPost} from "../features/mappingPost";export const postsRepository = {    async create(data: PostModel): Promise<PostOutputDataModel> {        await postsCollection.insertOne(data);        // @ts-ignore Ругается на отсутствие _id. Его добавляет метод mongodb insertOne()        return mappingPost(data);    },    async update(id: string, data: PostInputDataWithBlogNameModel): Promise<boolean> {        const _id: ObjectId = new ObjectId(id);        const result: UpdateResult<PostModel> = await postsCollection.updateOne({_id}, {$set: data});        return result.matchedCount === 1;    },    async delete(id: string): Promise<boolean> {        const _id: ObjectId = new ObjectId(id);        const result = await postsCollection.deleteOne({_id});        return result.deletedCount === 1;    },};
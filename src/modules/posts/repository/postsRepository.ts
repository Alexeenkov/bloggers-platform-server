import {    PostInputDataModel,    PostModel,    PostOutputDataModel,} from "../models/postsModels";import {postsCollection} from "../../../mongodb/db";import {ObjectId} from "mongodb";import {mappingPost} from "../features/mappingPost";import {blogsQueryRepository} from "../../blogs/repository/blogsQueryRepository";export const postsRepository = {    async create(data: PostModel): Promise<PostOutputDataModel | null> {        await postsCollection.insertOne(data);        // @ts-ignore Ругается на отсутствие _id. Его добавляет метод mongodb insertOne()        return mappingPost(data);    },    async update(id: string, data: PostInputDataModel): Promise<boolean> {        const blog = await blogsQueryRepository.findBlogName(data.blogId);        if (!blog) {            return false;        }        const _id: ObjectId = new ObjectId(id);        const result = await postsCollection.updateOne({_id}, {$set: {...data, blogName: blog.name}});        return result.matchedCount === 1;    },    async delete(id: string): Promise<boolean> {        const _id: ObjectId = new ObjectId(id);        const result = await postsCollection.deleteOne({_id});        return result.deletedCount === 1;    },};
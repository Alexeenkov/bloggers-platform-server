import {DB} from "../../../db/db";import {PostModel, PostWithIdModel} from "../models/postsModels";export const postsRepository = {    async create(newPost: PostWithIdModel): Promise<PostWithIdModel> {        await DB.posts.push(newPost);        return newPost;    },    async findAll(): Promise<PostWithIdModel[]> {        return await DB.posts;    },    async findById(id: PostWithIdModel['id']): Promise<PostWithIdModel | null> {        return await DB.posts.find((item: PostWithIdModel) => item.id === id) || null;    },    async update(postId: PostWithIdModel['id'], newData: PostModel): Promise<boolean> {        const index: number = await DB.posts.findIndex((item: PostWithIdModel) => item.id === postId);        if (index < 0) {            return false;        }        // TODO: await        DB.posts[index] = {            ...DB.posts[index],            ...newData,        };        return true;    },    async delete(deletedId: PostWithIdModel['id']): Promise<boolean> {        const index: number = await DB.posts.findIndex((item: PostWithIdModel) => item.id === deletedId);        if (index < 0) {            return false;        }        const deletedPost: PostWithIdModel = await DB.posts[index];        DB.posts = await DB.posts.filter((item: PostWithIdModel) => item.id !== deletedPost.id);        return true;    },};
import {Response} from "express";import type {IdPathParamsModel, RequestWithPathParamsAndBodyModel} from "../../../../shared/models";import {HTTP_STATUSES} from "../../../../shared/constants/httpStatuses";import {PostInputDataForBlogModel, PostModel, PostOutputDataModel} from "../../../posts/models/postsModels";import {postsService} from "../../../posts/application/postsService";import {blogsQueryRepository} from "../../repository/blogsQueryRepository";export const createPostForSpecificBlogHandler = async (    req: RequestWithPathParamsAndBodyModel<IdPathParamsModel, PostInputDataForBlogModel>,    res: Response<PostModel>,) => {    const blog = await blogsQueryRepository.findBlogName(req.params.id);    if (!blog) {        res.sendStatus(HTTP_STATUSES.NOT_FOUND);        return;    }    const newPost: PostOutputDataModel = await postsService.create({        ...req.body,        blogId: req.params.id,        blogName: blog.name,    });    res.status(HTTP_STATUSES.CREATED).json(newPost);};
import {Response} from "express";import {HTTP_STATUSES} from "../../../../shared/constants/httpStatuses";import {PostInputQueryModel, PostsOutputWithPaginationModel} from "../../../posts/models/postsModels";import {postsService} from "../../../posts/application/postsService";import type {    IdPathParamsModel,    RequestWithPathAndQueryParamsModel,} from "../../../../shared/models";import {withDefaultQueryParams} from "../../../posts/features/withDefaultQueryParams";import {blogsRepository} from "../../repository/blogsRepository";export const getPostsListForSpecificBlogHandler = async (    req: RequestWithPathAndQueryParamsModel<IdPathParamsModel, PostInputQueryModel>,    res: Response<PostsOutputWithPaginationModel>) => {    const blog = await blogsRepository.findBlogName(req.params.id);    if (!blog) {        res.sendStatus(HTTP_STATUSES.NOT_FOUND);        return;    }    const allPosts: PostsOutputWithPaginationModel = await postsService.findMany(        withDefaultQueryParams(req.query),        req.params.id,    );    res        .status(HTTP_STATUSES.OK)        .json(allPosts);};
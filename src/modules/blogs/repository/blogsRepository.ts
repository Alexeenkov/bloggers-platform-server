import {DB} from "../../../db/db";import {BlogModel, BlogWithIdModel} from "../models/blogsModels";export const blogsRepository = {    async create(newBlog: BlogWithIdModel): Promise<BlogWithIdModel> {        await DB.blogs.push(newBlog);        return newBlog;    },    async findAll(): Promise<BlogWithIdModel[]> {        return await DB.blogs;    },    async findById(id: BlogWithIdModel['id']): Promise<BlogWithIdModel | null> {        return await DB.blogs.find((item: BlogWithIdModel) => item.id === id) || null;    },    async update(blogId: BlogWithIdModel['id'], newData: BlogModel): Promise<boolean> {        const index: number = await DB.blogs.findIndex((item: BlogWithIdModel) => item.id === blogId);        if (index < 0) {            return false;        }        // TODO: await        DB.blogs[index] = {            ...DB.blogs[index],            ...newData,        };        return true;    },    async delete(deletedId: BlogWithIdModel['id']): Promise<boolean> {        const index: number = await DB.blogs.findIndex((item: BlogWithIdModel) => item.id === deletedId);        if (index < 0) {            return false;        }        const deletedBlog: BlogWithIdModel = await DB.blogs[index];        DB.blogs = await DB.blogs.filter((item: BlogWithIdModel) => item.id !== deletedBlog.id);        return true;    },};
import request from "supertest";import app from "../../src";import {ROUTERS} from "../../src/constants/routers";import {HTTP_STATUSES, TypeHttpStatus} from "../../src/constants/httpStatuses";import {PostModel, PostWithIdModel} from "../../src/models";export const postsTestManager = {    getAllPosts: async () => {        return await request(app)            .get(ROUTERS.posts)            .expect(HTTP_STATUSES.OK);    },    getPostById: async (        id: PostWithIdModel['id'],        expectedHttpStatus: TypeHttpStatus,    ) => {        return await request(app)            .get(`${ROUTERS.posts}/${id}`)            .expect(expectedHttpStatus);    },    createNewPost: async (        data: PostModel,        expectedHttpStatus: TypeHttpStatus,    ) => {        return await request(app)            .post(ROUTERS.posts)            .send(data)            .expect(expectedHttpStatus);    },    updatePost: async (        id: PostWithIdModel['id'],        data: PostModel,        expectedHttpStatus: TypeHttpStatus,    ) => {        await request(app)            .put(`${ROUTERS.posts}/${id}`)            .send(data)            .expect(expectedHttpStatus);    },    deletePost: async (id: PostWithIdModel['id']) => {        return await request(app)            .delete(`${ROUTERS.posts}/${id}`)            .expect(HTTP_STATUSES.NO_CONTENT);    },}
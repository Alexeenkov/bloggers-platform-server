import request from "supertest";import app from "../../src";import {HTTP_STATUSES, TypeHttpStatus} from "../../src/shared/constants/httpStatuses";import {BlogModel, BlogWithIdModel} from "../../src/modules/blogs/models";import {BLOGS_ROUTER_PATH} from "../../src/modules/blogs/constants";export const blogsTestManager = {    getAllBlogs: async () => {        return await request(app)            .get(BLOGS_ROUTER_PATH)            .expect(HTTP_STATUSES.OK);    },    getBlogById: async (        id: BlogWithIdModel['id'],        expectedHttpStatus: TypeHttpStatus,    ) => {        return await request(app)            .get(`${BLOGS_ROUTER_PATH}/${id}`)            .expect(expectedHttpStatus);    },    createNewBlog: async (        data: BlogModel,        expectedHttpStatus: TypeHttpStatus,    ) => {        return await request(app)            .post(BLOGS_ROUTER_PATH)            .send(data)            .expect(expectedHttpStatus);    },    updateBlog: async (        id: BlogWithIdModel['id'],        data: BlogModel,        expectedHttpStatus: TypeHttpStatus,    ) => {        await request(app)            .put(`${BLOGS_ROUTER_PATH}/${id}`)            .send(data)            .expect(expectedHttpStatus);    },    deleteBlog: async (id: BlogWithIdModel['id']) => {        return await request(app)            .delete(`${BLOGS_ROUTER_PATH}/${id}`)            .expect(HTTP_STATUSES.NO_CONTENT);    },}